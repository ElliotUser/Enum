                                 Перечисления.
    Перечесления представляют собой список именнованных констант.
    В Java перечесления определяют тип класса. Благодаря тому что перечесления реализованы в виде
классов, само понятие перечисления значительно расширяется. Например, перечесления в Java могут
иметь конструкторы, методы и переменные экземпляра.


                            Основные положения о перечислениях.
    Перечисления создаются с помощью ключевого слова enum.

enum Apple {
     Jonathan, GoldenDel, RedDel, Winesap, Cortland
}

    Идентификаторы Jonathan, GoldenDel и т.д. называются  константами перечислимого типа. Каждый
из них явно объявлен как открытый статический конечный член класса Apple. Более того, они относятся
к типу того перечисления, в котором объявлены. В языке Java такие константы называются самотипези-
рованными, причем префикс само относится к охватывающему их перечислению.
    Объявив перечисление, можно создавать переменные данного типа. Но, несмотря на то, что перечи-
сления определяют тип класса, получать экземпляры класса типа enum с помощью оператора new нельзя.
Вместо этого переменная перечисления объявляется и применяется практически так же, как и переменн§ые
примитивных типов. В приведенном ниже примере объявляется переменная ар перечислимого типа Apple.

Apple ap;

    Переменная ар относится к типу Apple, и поэтому ей можно присвоить только те значения, которые
определены в перечислении. В следующем примере переменной ар присваивается значение RedDel:

ap = Apple.RedDel;

    Обратите внимание на то, что значение RedDel предшествует тип Apple. Две константы перечислимого
типа можно проверять на равенство с помощью операции отношения ==.

if (ар == Apple.GoldenDel)

    Значения перечислимого типа можно также использовать в управляющем опе­раторе switch. Разумеется,
для этого во всех выражениях ветвей case должны использоваться константы из того же самого перечисления,
что и в самом операторе switch.

switch(ар) {
case Jonathan:
    //...
case Winesap:
    //...

    В выражениях ветвей case имена констант ука­зываются без уточнения имени их перечислимого типа, напри-
мер Winesap, а не Apple.Winesap. Дело в том, что тип перечисления в операторе switch уже неявно задает тип
перечисления для выражений в ветвях case. Следовательно, уточнять имена констант в выражениях ветвей case
не нужно. В действительности любая попытка сделать это приведет к ошибке во время компиляции.
    Когда выводится константа перечислимого типа, например, методом println(), то отображается ее имя.


System.out.println(Apple.Winesap)

Выводится имя Winesap.